@use 'config';

// 将选择器转为字符串，获取指定位置的字符
@function selectorToString($selector) {
    $selector: inspect($selector);
    $selector: str-slice($selector, 2, -2);
    @return $selector
}

@function containsModifier($selector) {
    $selector: selectorToString($selector);

    @if str-index($selector, config.$modifier-separator) {
        @return true;
    }

    @else {
        @return false;
    }
}

@function containWhenFlag($selector) {
    $selector: selectorToString($selector);

    @if str-index($selector, '.' + config.$state-prefix) {
        @return true;
    }

    @else {
        @return false;
    }
}

@function containPseudoClass($selector) {
    $selector: selectorToString($selector);

    @if str-index($selector, ':') {
        @return true;
    }

    @else {
        @return false;
    }
}

@function hitAllSpecialNestRule($selector) {
    @return containsModifier($selector) or containWhenFlag($selector) or containPseudoClass($selector)
}

@function joinVarName($list){
    $name:'--'+config.$namespace;
    @each $item in $list {
         @if $item != '' {
             $name:$name + '-' + $item
         }
    }
    @return $name
}

@function getCssVarName($args...){
    @return joinVarName($args)
}

@function getCssVar($args...) {
    @return var(#{joinVarName($args)});
}